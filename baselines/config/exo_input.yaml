exo_input:
  _target_: src.simulators.exogenous_signals.SignalGenerator
  num_samples: 5
  seed: 22
  sys_states: 6
  signals:
    #    state_1:
    #      _target_: src.simulators.exogenous_signals.SinSignal
    #      seed: ${exo_input.seed}
    #      num_samples: ${exo_input.num_samples}
    #      params:
    #        _target_: src.simulators.types.SigParam
    #        signal_type: harmonics_range
    #        signal_data:
    #            {
    #            sin_component: 3,
    #            omega_range: [ 0, 0.6 ],
    #            amp_range: [ -3, 3 ]
    #            }
    #
    #    state_2:
    #      _target_: src.simulators.exogenous_signals.AlternatingSquareSignal
    #      seed: ${exo_input.seed}
    #      num_samples: ${exo_input.num_samples}
    #      params:
    #        _target_: src.simulators.types.SigParam
    #        signal_type: square_wave
    #        signal_data:
    #          {
    #            period: 10,
    #            amp: [ -1, 1 ]
    #          }
    #
    state_1:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.Duffing
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 1, 0 ] # Observation matrix
              ObservableIndex: [ 0 ]
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: lhs
              seed: ${ exo_input.seed }
              sample_space: [ [ -1,1 ],[ -1,1 ] ]

    #                m_noise:
    #                  _target_: src.simulators.noise.get_noise
    #                  noise_type: gaussian
    #                  mean: 0
    #                  std: 0.1
    state_2:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.Lorenz
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 0, 1, 0 ] # Observation matrix
              ObservableIndex: [ 1 ]
              system_coeff:
                sigma: 10
                rho: 28
                beta: 8/3
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: lhs
              seed: ${ exo_input.seed }
              sample_space: [ [ -1,1 ],[ -1,1 ], [ -1,1 ] ]

    #                m_noise:
    #                  _target_: src.simulators.noise.get_noise
    #                  noise_type: gaussian
    #                  mean: 0
    #                  std: 0.1
    state_3:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.SIR
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 0,1, 0 ] # Observation matrix
              ObservableIndex: [ 1 ]
              system_coeff:
                beta: 0.5
                gamma: 0.1
                N: 1000
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: sir
              sample_space: [ [ 0, 1 ], [ 0, 1 ], [ 0, 1 ] ]
              N: 1000
              seed: ${exo_input.seed}
    #                m_noise:
    #                  _target_: src.simulators.noise.get_noise
    #                  noise_type: gaussian
    #                  mean: 0
    #                  std: 0.1
    state_4:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.VdP
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 1, 0 ] # Observation matrix
              ObservableIndex: [ 0 ]
              system_coeff:
                mu: 1
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: lhs
              seed: ${ exo_input.seed }
              sample_space: [ [ -1,1 ],[ -1,1 ] ]

    #                m_noise:
    #                  _target_: src.simulators.noise.get_noise
    #                  noise_type: gaussian
    #                  mean: 0
    #                  std: 0.1
    state_5:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.Rossler
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 0, 1, 0 ] # Observation matrix
              ObservableIndex: [ 1 ]
              system_coeff:
                a: 0.2
                b: 0.2
                c: 5.7
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: lhs
              seed: ${ exo_input.seed }
              sample_space: [ [ -1,1 ],[ -1,1 ], [ -1,1 ] ]

    #                m_noise:
    #                  _target_: src.simulators.noise.get_noise
    #                  noise_type: gaussian
    #                  mean: 0
    #                  std: 0.1
    state_6:
      _target_: src.simulators.exogenous_signals.SystemAsSignal
      num_samples: ${exo_input.num_samples}
      seed: ${exo_input.seed}
      params:
        _target_: src.simulators.types.SigParam
        signal_type: system
        signal_data:
          solver:
            _target_: src.simulators.solvers.get_solver
            name: rk4
          system:
            _target_: src.simulators.systems.Chua
            num_samples: ${ exo_input.num_samples }
            system_param:
              _target_: src.simulators.types.SysParam
              C: [ 0, 0, 1 ] # Observation matrix
              ObservableIndex: [ 2 ]
              system_coeff:
                alpha: 9.0
                beta: 14.0
                R: 1.0
                C2: 10.0
                m0: -1.143
                m1: -0.714
            sampler:
              _target_: src.simulators.sampler.get_sampler
              sampler_type: lhs
              seed: ${ exo_input.seed }
              sample_space: [ [ 0,1 ], [ 0,0.1 ],[ 0,0.1 ] ]
#                m_noise:
#                  _target_: src.simulators.noise.get_noise
#                  noise_type: gaussian
#                  mean: 0
#                  std: 0.1
