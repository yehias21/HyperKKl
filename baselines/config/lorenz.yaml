experiment_name: duffing_simple_inp
env_path: ./baselines/config/.env
data:
  solver:
    _target_: src.simulators.solvers.get_solver
    name: rk4
  pinn_sampling: split_traj # split_set, split_traj, no_physics
  gen_mode: forward #'forward' or 'backward'"
  dataloader:
    seed: 123
    batch_size: 32
    validation: 10 # time in sec
    shuffle: True
#    window_size: 1

  sim_time:
    _target_: src.simulators.types.SimTime
    t0: 0.0 # in seconds
    tn: 50.0  # in seconds (including validation time)
    eps: 0.005 #  Make sure to take the Shannon's theorem into account


  system:
    _target_: src.simulators.systems.Lorenz
    num_samples: 50
    system_param:
      _target_: src.simulators.types.SysParam
      C: [ 1, 0 , 0] # Observation matrix
      ObservableIndex: [ 0 ]
      system_coeff:
        {
          sigma: 10,
          rho: 28,
          beta: 8/3
        }
    sampler:
      _target_: src.simulators.sampler.get_sampler
      sampler_type: lhs
      seed: 0
      sample_space: [ [ -1,1 ],[ -1,1 ], [ -1,1 ] ]
#    p_noise:
#      _target_: src.simulators.noise.get_noise
#      noise_type: gaussian
#      mean: 0
#      std: 0.1
#    m_noise:
#      _target_: src.simulators.noise.get_noise
#      noise_type: gaussian
#      mean: 0
#      std: 0.1
  ph_sampler:
    _target_: src.simulators.sampler.get_sampler
    sampler_type: lhs
    seed: 8888
    sample_space: [ [ -1,1 ],[ -1,1 ], [ -1,1 ] ]

  observer:
    _target_: src.simulators.estimators.KKLObserver
    a: [
    -5.5789, -2.7403, -1.7407, -0.9421, -2.1324, -0.8145, -1.6647,
    1.3897, -2.2332, -0.3178, 0.2383, 2.1512, 1.4120, 0.5057,
    -2.6749, -3.9714, -6.4198, -3.0246, -1.6417, -2.4271, -1.5120,
    0.3505, 1.1551, -0.5179, -2.8004, 0.3484, 0.2887, 1.5887,
    1.5321, 5.6648, 1.5816, 6.0877, -3.4034, 2.2624, 4.2479,
    1.1154, -0.4755, 2.5320, -2.4018, -0.0240, -4.7100, -2.6273,
    -0.4370, -1.0032, -0.5039, 0.3796, 0.5149, 0.3445, -2.8543
]
    b: [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  ]
    z_dim: 7
    e: 0.000001 #10e-6
    z_max: 10
    num_samples: ${data.system.num_samples}
    sampler:
      _target_: src.simulators.sampler.get_sampler
      sampler_type: uniform
      seed: 123
      sample_space: [ [ -1,1 ],[ -1,1 ],[ -1,1 ],[ -1,1 ],[ -1,1 ],[ -1,1 ],[ -1,1 ] ]

models:
  forward_mapper:
    type: MLP
    update_method: backprop #backprop, delta, full
    input_size: 2
    output_size: 5
    hidden_dim: [ 50, 50, 50, 50, 50 ]
    activation: [ relu, relu, relu, relu, relu ]
    pretrained: False

  inverse_mapper:
    type: MLP
    update_method: backprop #backprop, delta, full
    input_size: 5
    output_size: 2
    hidden_dim: [ 50, 50, 50, 50, 50 ]
    activation: [ relu, relu, relu, relu, relu ]
    pretrained: False

#  hypernetwork:
#    shared: True
#    encoder:
#      type: MLP
#      update_method: backprop
#      input_size: 1
#      output_size: 128
#      hidden_dim: [ 100, 100, 100 ]
#      activation: [ relu, relu, relu ]
#    decoder:
#      method: lora #Full, chunked, lora
#      regress: weight  #all - weight
#      input_size: 128
#      rank_ratio: 0.5

trainer:
  method: supervised_pinn    #or unsupervised
  epochs: 15
  learning_rate: 0.001
  lambda: 1
  loss: mse
  device: cuda # cuda or cpu
  save_dir: ./checkpoints